server {
    listen 80;
    listen [::]:80;

    server_name localhost;

    # Erlaube spezielle zeichen im Header
    ignore_invalid_headers off;

    # Filesize restriktion, im moment auf 1GB gesetzt, was nie überschritten werden sollte, da ankommende Stream-chunks definitiv unter 1 GB an Größe sein sollten
    client_max_body_size 1000m;

    # API Gateway buffern kann zu Problemen führen beim Streaming von Daten
    proxy_buffering off;

    # MinIO Direktiv
    # Muss auf / erfolgen, da minio anscheinend Direktive an die URL konkateniert, was zu internen Problemen bei MinIO führt.
    location / {
    # Annahme und Weiterleitung von Headern, wie Host, IP-Adresse, etc.
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        # Weiterleitung der Anfrage auf den Docker-Container mit dem im docker-compose.yml definierten container-name "minio".
        proxy_pass http://minio:9000;
        proxy_connect_timeout  300;

        # HTTP 1.1 implementiert keepalive, wodurch die Verbindung zu einem Server nach dessen Anfrage nicht direkt geschlossen wird. Server-Verbindungen aufrecht zu erhalten statt diese immer wieder neu zu initialisieren ist kosteneffizienter
        proxy_http_version 1.1;

        # durch HTTP 1.1 muss der Connection Header bereinigt werden
        # Quelle: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive
        proxy_set_header Connection "";
    }

    # Apollo Gateway Direktiv
    location /rrremote/graphql {
        # Annahme und Weiterleitung von Headern, wie Host, IP-Adresse, etc.
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;

        # Weiterleitung der Anfrage auf den Docker-Container mit dem im docker-compose.yml definierten container-name "graphqlgateway".
        proxy_pass http://graphqlgateway:8080/graphql;

        # GraphQL anfragen sollen nicht zu einem redirect führen, da es sich hierbei nicht um eine Änderung der UI handelt
        proxy_redirect off;
    }

    # RabbitMQ Direktiv
    # Quelle: https://stackoverflow.com/questions/49742269/rabbitmq-management-over-https-and-nginx
    location ~* /rabbitmq/api/(.*?)/(.*) {
        proxy_pass http://rabbitmq:15672/api/$1/%2F/$2?$query_string;
        proxy_buffering                    off;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* /rabbitmq/(.*) {
        rewrite ^/rabbitmq/(.*)$ /$1 break;
        proxy_pass http://rabbitmq:15672;
        proxy_buffering                    off;
        proxy_set_header Host              $http_host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
